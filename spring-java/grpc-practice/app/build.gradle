/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.5/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'

    id 'com.google.protobuf' version '0.9.4'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation libs.guava

    // grpc modules
	runtimeOnly 'io.grpc:grpc-netty-shaded:1.63.0'
	implementation 'io.grpc:grpc-protobuf:1.63.0'
	implementation 'io.grpc:grpc-stub:1.63.0'
	compileOnly 'org.apache.tomcat:annotations-api:6.0.53' // necessary for Java 9+
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'grpc.practice.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

// protobuf configuration
protobuf {
	// configure the protoc executable
  protoc {
		// download from repositories
    artifact = "com.google.protobuf:protoc:3.25.1"
  }

	// configure codegen plugins
  plugins {
		// Locate a plugin with name 'grpc'. This step is optional.
    // If you leave it empty, it uses the current directory.
    // If you don't specify it, protoc will try to use "protoc-gen-grpc" from
    // system search path.
    grpc {
      artifact = 'io.grpc:protoc-gen-grpc-java:1.63.0'
    }
  }

	// configure the tasks to apply the plugins
  generateProtoTasks {
		// all() returns the collection of all protoc tasks
    all()*.plugins {
      grpc {}
    }
  }
}
